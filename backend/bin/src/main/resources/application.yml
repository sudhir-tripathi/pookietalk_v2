spring:
  application:
    name: pookietalk
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/pookietalk
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
  
  # Redis Configuration
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    timeout: 2000
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 2
        max-wait: -1ms
  
  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 1800000
      cache-null-values: false
  
  # WebSocket Configuration
  websocket:
    allowed-origins: "*"
    endpoint: /ws
    destination-prefix: /topic
    application-prefix: /app
    heartbeat:
      time: 10000
      write-timeout: 20000

# Security Configuration
security:
  jwt:
    secret: ${JWT_SECRET:your-256-bit-secret}
    expiration: 86400000  # 24 hours
    refresh-token:
      expiration: 604800000  # 7 days

# Server Configuration
server:
  port: 8080
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,application/javascript,application/json
    min-response-size: 1024
  http2:
    enabled: true
  tomcat:
    max-threads: 200
    accept-count: 100

# Logging Configuration
logging:
  level:
    root: INFO
    com.pookietalk: DEBUG
    org.springframework.web: INFO
    org.hibernate: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/pookietalk.log
    max-size: 10MB
    max-history: 7

# Management Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
  metrics:
    tags:
      application: ${spring.application.name}
    export:
      prometheus:
        enabled: true

# Custom Application Properties
app:
  cors:
    allowed-origins: http://localhost:3000
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
  
  rate-limiting:
    enabled: true
    default-limit: 100
    duration: 60  # seconds
  
  chat:
    max-message-length: 1000
    max-room-participants: 100
    message-history-limit: 50
    inactive-timeout: 300  # seconds